// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`containers App render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Provider
    event={
      Event {
        "application": ApplicationObject {
          "onApply": [Function],
          "onCancel": [Function],
          "onChangeClassroom": [Function],
          "onChangeLottery": [Function],
          "onUpdate": [Function],
          "store": Store {
            "application": ApplicationObject {},
            "credential": CredentialObject {},
            "error": ErrorObject {},
            "router": RouterStore {
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
                "subscribe": [Function],
                "unsubscribe": [Function],
              },
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
                Symbol(mobx administration): ObservableObjectAdministration$$1 {
                  "defaultEnhancer": [Function],
                  "keysAtom": Atom$$1 {
                    "diffValue": 0,
                    "isBeingObserved": false,
                    "isPendingUnobservation": false,
                    "lastAccessedBy": 0,
                    "lowestObserverState": 2,
                    "name": "RouterStore@1.location.keys",
                    "observers": Set {},
                  },
                  "name": "RouterStore@1.location",
                  "pendingKeys": Map {
                    "$$typeof" => false,
                    "nodeType" => false,
                    "@@__IMMUTABLE_ITERABLE__@@" => false,
                    "@@__IMMUTABLE_RECORD__@@" => false,
                    "_isMockFunction" => false,
                    "toJSON" => false,
                  },
                  "proxy": [Circular],
                  "target": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                    Symbol(mobx administration): [Circular],
                  },
                  "values": Map {
                    "pathname" => "/",
                    "search" => "",
                    "hash" => "",
                    "state" => undefined,
                  },
                },
              },
              "push": [Function],
              "replace": [Function],
              Symbol(mobx did run lazy initializers): true,
              Symbol(mobx administration): ObservableObjectAdministration$$1 {
                "defaultEnhancer": [Function],
                "keysAtom": Atom$$1 {
                  "diffValue": 0,
                  "isBeingObserved": false,
                  "isPendingUnobservation": false,
                  "lastAccessedBy": 0,
                  "lowestObserverState": 2,
                  "name": "RouterStore@1.keys",
                  "observers": Set {},
                },
                "name": "RouterStore@1",
                "target": [Circular],
                "values": Map {
                  "location" => Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                    Symbol(mobx administration): ObservableObjectAdministration$$1 {
                      "defaultEnhancer": [Function],
                      "keysAtom": Atom$$1 {
                        "diffValue": 0,
                        "isBeingObserved": false,
                        "isPendingUnobservation": false,
                        "lastAccessedBy": 0,
                        "lowestObserverState": 2,
                        "name": "RouterStore@1.location.keys",
                        "observers": Set {},
                      },
                      "name": "RouterStore@1.location",
                      "pendingKeys": Map {
                        "$$typeof" => false,
                        "nodeType" => false,
                        "@@__IMMUTABLE_ITERABLE__@@" => false,
                        "@@__IMMUTABLE_RECORD__@@" => false,
                        "_isMockFunction" => false,
                        "toJSON" => false,
                      },
                      "proxy": [Circular],
                      "target": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                        Symbol(mobx administration): [Circular],
                      },
                      "values": Map {
                        "pathname" => "/",
                        "search" => "",
                        "hash" => "",
                        "state" => undefined,
                      },
                    },
                  },
                },
              },
            },
          },
        },
        "credential": CredentialObject {
          "onChangePassword": [Function],
          "onChangeUsername": [Function],
          "onLogin": [Function],
          "onLogout": [Function],
          "store": Store {
            "application": ApplicationObject {},
            "credential": CredentialObject {},
            "error": ErrorObject {},
            "router": RouterStore {
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
                "subscribe": [Function],
                "unsubscribe": [Function],
              },
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
                Symbol(mobx administration): ObservableObjectAdministration$$1 {
                  "defaultEnhancer": [Function],
                  "keysAtom": Atom$$1 {
                    "diffValue": 0,
                    "isBeingObserved": false,
                    "isPendingUnobservation": false,
                    "lastAccessedBy": 0,
                    "lowestObserverState": 2,
                    "name": "RouterStore@1.location.keys",
                    "observers": Set {},
                  },
                  "name": "RouterStore@1.location",
                  "pendingKeys": Map {
                    "$$typeof" => false,
                    "nodeType" => false,
                    "@@__IMMUTABLE_ITERABLE__@@" => false,
                    "@@__IMMUTABLE_RECORD__@@" => false,
                    "_isMockFunction" => false,
                    "toJSON" => false,
                  },
                  "proxy": [Circular],
                  "target": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                    Symbol(mobx administration): [Circular],
                  },
                  "values": Map {
                    "pathname" => "/",
                    "search" => "",
                    "hash" => "",
                    "state" => undefined,
                  },
                },
              },
              "push": [Function],
              "replace": [Function],
              Symbol(mobx did run lazy initializers): true,
              Symbol(mobx administration): ObservableObjectAdministration$$1 {
                "defaultEnhancer": [Function],
                "keysAtom": Atom$$1 {
                  "diffValue": 0,
                  "isBeingObserved": false,
                  "isPendingUnobservation": false,
                  "lastAccessedBy": 0,
                  "lowestObserverState": 2,
                  "name": "RouterStore@1.keys",
                  "observers": Set {},
                },
                "name": "RouterStore@1",
                "target": [Circular],
                "values": Map {
                  "location" => Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                    Symbol(mobx administration): ObservableObjectAdministration$$1 {
                      "defaultEnhancer": [Function],
                      "keysAtom": Atom$$1 {
                        "diffValue": 0,
                        "isBeingObserved": false,
                        "isPendingUnobservation": false,
                        "lastAccessedBy": 0,
                        "lowestObserverState": 2,
                        "name": "RouterStore@1.location.keys",
                        "observers": Set {},
                      },
                      "name": "RouterStore@1.location",
                      "pendingKeys": Map {
                        "$$typeof" => false,
                        "nodeType" => false,
                        "@@__IMMUTABLE_ITERABLE__@@" => false,
                        "@@__IMMUTABLE_RECORD__@@" => false,
                        "_isMockFunction" => false,
                        "toJSON" => false,
                      },
                      "proxy": [Circular],
                      "target": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                        Symbol(mobx administration): [Circular],
                      },
                      "values": Map {
                        "pathname" => "/",
                        "search" => "",
                        "hash" => "",
                        "state" => undefined,
                      },
                    },
                  },
                },
              },
            },
          },
        },
        "store": Store {
          "application": ApplicationObject {},
          "credential": CredentialObject {},
          "error": ErrorObject {},
          "router": RouterStore {
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
              "subscribe": [Function],
              "unsubscribe": [Function],
            },
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
              Symbol(mobx administration): ObservableObjectAdministration$$1 {
                "defaultEnhancer": [Function],
                "keysAtom": Atom$$1 {
                  "diffValue": 0,
                  "isBeingObserved": false,
                  "isPendingUnobservation": false,
                  "lastAccessedBy": 0,
                  "lowestObserverState": 2,
                  "name": "RouterStore@1.location.keys",
                  "observers": Set {},
                },
                "name": "RouterStore@1.location",
                "pendingKeys": Map {
                  "$$typeof" => false,
                  "nodeType" => false,
                  "@@__IMMUTABLE_ITERABLE__@@" => false,
                  "@@__IMMUTABLE_RECORD__@@" => false,
                  "_isMockFunction" => false,
                  "toJSON" => false,
                },
                "proxy": [Circular],
                "target": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                  Symbol(mobx administration): [Circular],
                },
                "values": Map {
                  "pathname" => "/",
                  "search" => "",
                  "hash" => "",
                  "state" => undefined,
                },
              },
            },
            "push": [Function],
            "replace": [Function],
            Symbol(mobx did run lazy initializers): true,
            Symbol(mobx administration): ObservableObjectAdministration$$1 {
              "defaultEnhancer": [Function],
              "keysAtom": Atom$$1 {
                "diffValue": 0,
                "isBeingObserved": false,
                "isPendingUnobservation": false,
                "lastAccessedBy": 0,
                "lowestObserverState": 2,
                "name": "RouterStore@1.keys",
                "observers": Set {},
              },
              "name": "RouterStore@1",
              "target": [Circular],
              "values": Map {
                "location" => Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                  Symbol(mobx administration): ObservableObjectAdministration$$1 {
                    "defaultEnhancer": [Function],
                    "keysAtom": Atom$$1 {
                      "diffValue": 0,
                      "isBeingObserved": false,
                      "isPendingUnobservation": false,
                      "lastAccessedBy": 0,
                      "lowestObserverState": 2,
                      "name": "RouterStore@1.location.keys",
                      "observers": Set {},
                    },
                    "name": "RouterStore@1.location",
                    "pendingKeys": Map {
                      "$$typeof" => false,
                      "nodeType" => false,
                      "@@__IMMUTABLE_ITERABLE__@@" => false,
                      "@@__IMMUTABLE_RECORD__@@" => false,
                      "_isMockFunction" => false,
                      "toJSON" => false,
                    },
                    "proxy": [Circular],
                    "target": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                      Symbol(mobx administration): [Circular],
                    },
                    "values": Map {
                      "pathname" => "/",
                      "search" => "",
                      "hash" => "",
                      "state" => undefined,
                    },
                  },
                },
              },
            },
          },
        },
      }
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
          "subscribe": [Function],
          "unsubscribe": [Function],
        }
      }
    >
      <inject-App-with-event
        store={
          Store {
            "application": ApplicationObject {},
            "credential": CredentialObject {},
            "error": ErrorObject {},
            "router": RouterStore {
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
                "subscribe": [Function],
                "unsubscribe": [Function],
              },
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
                Symbol(mobx administration): ObservableObjectAdministration$$1 {
                  "defaultEnhancer": [Function],
                  "keysAtom": Atom$$1 {
                    "diffValue": 0,
                    "isBeingObserved": false,
                    "isPendingUnobservation": false,
                    "lastAccessedBy": 0,
                    "lowestObserverState": 2,
                    "name": "RouterStore@1.location.keys",
                    "observers": Set {},
                  },
                  "name": "RouterStore@1.location",
                  "pendingKeys": Map {
                    "$$typeof" => false,
                    "nodeType" => false,
                    "@@__IMMUTABLE_ITERABLE__@@" => false,
                    "@@__IMMUTABLE_RECORD__@@" => false,
                    "_isMockFunction" => false,
                    "toJSON" => false,
                  },
                  "proxy": [Circular],
                  "target": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                    Symbol(mobx administration): [Circular],
                  },
                  "values": Map {
                    "pathname" => "/",
                    "search" => "",
                    "hash" => "",
                    "state" => undefined,
                  },
                },
              },
              "push": [Function],
              "replace": [Function],
              Symbol(mobx did run lazy initializers): true,
              Symbol(mobx administration): ObservableObjectAdministration$$1 {
                "defaultEnhancer": [Function],
                "keysAtom": Atom$$1 {
                  "diffValue": 0,
                  "isBeingObserved": false,
                  "isPendingUnobservation": false,
                  "lastAccessedBy": 0,
                  "lowestObserverState": 2,
                  "name": "RouterStore@1.keys",
                  "observers": Set {},
                },
                "name": "RouterStore@1",
                "target": [Circular],
                "values": Map {
                  "location" => Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                    Symbol(mobx administration): ObservableObjectAdministration$$1 {
                      "defaultEnhancer": [Function],
                      "keysAtom": Atom$$1 {
                        "diffValue": 0,
                        "isBeingObserved": false,
                        "isPendingUnobservation": false,
                        "lastAccessedBy": 0,
                        "lowestObserverState": 2,
                        "name": "RouterStore@1.location.keys",
                        "observers": Set {},
                      },
                      "name": "RouterStore@1.location",
                      "pendingKeys": Map {
                        "$$typeof" => false,
                        "nodeType" => false,
                        "@@__IMMUTABLE_ITERABLE__@@" => false,
                        "@@__IMMUTABLE_RECORD__@@" => false,
                        "_isMockFunction" => false,
                        "toJSON" => false,
                      },
                      "proxy": [Circular],
                      "target": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                        Symbol(mobx administration): [Circular],
                      },
                      "values": Map {
                        "pathname" => "/",
                        "search" => "",
                        "hash" => "",
                        "state" => undefined,
                      },
                    },
                  },
                },
              },
            },
          }
        }
      />
    </Router>
  </Provider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <inject-App-with-event
        store={
          Store {
            "application": ApplicationObject {},
            "credential": CredentialObject {},
            "error": ErrorObject {},
            "router": RouterStore {
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
                "subscribe": [Function],
                "unsubscribe": [Function],
              },
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
                Symbol(mobx administration): ObservableObjectAdministration$$1 {
                  "defaultEnhancer": [Function],
                  "keysAtom": Atom$$1 {
                    "diffValue": 0,
                    "isBeingObserved": false,
                    "isPendingUnobservation": false,
                    "lastAccessedBy": 0,
                    "lowestObserverState": 2,
                    "name": "RouterStore@1.location.keys",
                    "observers": Set {},
                  },
                  "name": "RouterStore@1.location",
                  "pendingKeys": Map {
                    "$$typeof" => false,
                    "nodeType" => false,
                    "@@__IMMUTABLE_ITERABLE__@@" => false,
                    "@@__IMMUTABLE_RECORD__@@" => false,
                    "_isMockFunction" => false,
                    "toJSON" => false,
                  },
                  "proxy": [Circular],
                  "target": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                    Symbol(mobx administration): [Circular],
                  },
                  "values": Map {
                    "pathname" => "/",
                    "search" => "",
                    "hash" => "",
                    "state" => undefined,
                  },
                },
              },
              "push": [Function],
              "replace": [Function],
              Symbol(mobx did run lazy initializers): true,
              Symbol(mobx administration): ObservableObjectAdministration$$1 {
                "defaultEnhancer": [Function],
                "keysAtom": Atom$$1 {
                  "diffValue": 0,
                  "isBeingObserved": false,
                  "isPendingUnobservation": false,
                  "lastAccessedBy": 0,
                  "lowestObserverState": 2,
                  "name": "RouterStore@1.keys",
                  "observers": Set {},
                },
                "name": "RouterStore@1",
                "target": [Circular],
                "values": Map {
                  "location" => Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                    Symbol(mobx administration): ObservableObjectAdministration$$1 {
                      "defaultEnhancer": [Function],
                      "keysAtom": Atom$$1 {
                        "diffValue": 0,
                        "isBeingObserved": false,
                        "isPendingUnobservation": false,
                        "lastAccessedBy": 0,
                        "lowestObserverState": 2,
                        "name": "RouterStore@1.location.keys",
                        "observers": Set {},
                      },
                      "name": "RouterStore@1.location",
                      "pendingKeys": Map {
                        "$$typeof" => false,
                        "nodeType" => false,
                        "@@__IMMUTABLE_ITERABLE__@@" => false,
                        "@@__IMMUTABLE_RECORD__@@" => false,
                        "_isMockFunction" => false,
                        "toJSON" => false,
                      },
                      "proxy": [Circular],
                      "target": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                        Symbol(mobx administration): [Circular],
                      },
                      "values": Map {
                        "pathname" => "/",
                        "search" => "",
                        "hash" => "",
                        "state" => undefined,
                      },
                    },
                  },
                },
              },
            },
          }
        }
      />,
      "history": Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
        "subscribe": [Function],
        "unsubscribe": [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "store": Store {
          "application": ApplicationObject {},
          "credential": CredentialObject {},
          "error": ErrorObject {},
          "router": RouterStore {
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
              "subscribe": [Function],
              "unsubscribe": [Function],
            },
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
              Symbol(mobx administration): ObservableObjectAdministration$$1 {
                "defaultEnhancer": [Function],
                "keysAtom": Atom$$1 {
                  "diffValue": 0,
                  "isBeingObserved": false,
                  "isPendingUnobservation": false,
                  "lastAccessedBy": 0,
                  "lowestObserverState": 2,
                  "name": "RouterStore@1.location.keys",
                  "observers": Set {},
                },
                "name": "RouterStore@1.location",
                "pendingKeys": Map {
                  "$$typeof" => false,
                  "nodeType" => false,
                  "@@__IMMUTABLE_ITERABLE__@@" => false,
                  "@@__IMMUTABLE_RECORD__@@" => false,
                  "_isMockFunction" => false,
                  "toJSON" => false,
                },
                "proxy": [Circular],
                "target": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                  Symbol(mobx administration): [Circular],
                },
                "values": Map {
                  "pathname" => "/",
                  "search" => "",
                  "hash" => "",
                  "state" => undefined,
                },
              },
            },
            "push": [Function],
            "replace": [Function],
            Symbol(mobx did run lazy initializers): true,
            Symbol(mobx administration): ObservableObjectAdministration$$1 {
              "defaultEnhancer": [Function],
              "keysAtom": Atom$$1 {
                "diffValue": 0,
                "isBeingObserved": false,
                "isPendingUnobservation": false,
                "lastAccessedBy": 0,
                "lowestObserverState": 2,
                "name": "RouterStore@1.keys",
                "observers": Set {},
              },
              "name": "RouterStore@1",
              "target": [Circular],
              "values": Map {
                "location" => Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                  Symbol(mobx administration): ObservableObjectAdministration$$1 {
                    "defaultEnhancer": [Function],
                    "keysAtom": Atom$$1 {
                      "diffValue": 0,
                      "isBeingObserved": false,
                      "isPendingUnobservation": false,
                      "lastAccessedBy": 0,
                      "lowestObserverState": 2,
                      "name": "RouterStore@1.location.keys",
                      "observers": Set {},
                    },
                    "name": "RouterStore@1.location",
                    "pendingKeys": Map {
                      "$$typeof" => false,
                      "nodeType" => false,
                      "@@__IMMUTABLE_ITERABLE__@@" => false,
                      "@@__IMMUTABLE_RECORD__@@" => false,
                      "_isMockFunction" => false,
                      "toJSON" => false,
                    },
                    "proxy": [Circular],
                    "target": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                      Symbol(mobx administration): [Circular],
                    },
                    "values": Map {
                      "pathname" => "/",
                      "search" => "",
                      "hash" => "",
                      "state" => undefined,
                    },
                  },
                },
              },
            },
          },
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <inject-App-with-event
          store={
            Store {
              "application": ApplicationObject {},
              "credential": CredentialObject {},
              "error": ErrorObject {},
              "router": RouterStore {
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                  "subscribe": [Function],
                  "unsubscribe": [Function],
                },
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                  Symbol(mobx administration): ObservableObjectAdministration$$1 {
                    "defaultEnhancer": [Function],
                    "keysAtom": Atom$$1 {
                      "diffValue": 0,
                      "isBeingObserved": false,
                      "isPendingUnobservation": false,
                      "lastAccessedBy": 0,
                      "lowestObserverState": 2,
                      "name": "RouterStore@1.location.keys",
                      "observers": Set {},
                    },
                    "name": "RouterStore@1.location",
                    "pendingKeys": Map {
                      "$$typeof" => false,
                      "nodeType" => false,
                      "@@__IMMUTABLE_ITERABLE__@@" => false,
                      "@@__IMMUTABLE_RECORD__@@" => false,
                      "_isMockFunction" => false,
                      "toJSON" => false,
                    },
                    "proxy": [Circular],
                    "target": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                      Symbol(mobx administration): [Circular],
                    },
                    "values": Map {
                      "pathname" => "/",
                      "search" => "",
                      "hash" => "",
                      "state" => undefined,
                    },
                  },
                },
                "push": [Function],
                "replace": [Function],
                Symbol(mobx did run lazy initializers): true,
                Symbol(mobx administration): ObservableObjectAdministration$$1 {
                  "defaultEnhancer": [Function],
                  "keysAtom": Atom$$1 {
                    "diffValue": 0,
                    "isBeingObserved": false,
                    "isPendingUnobservation": false,
                    "lastAccessedBy": 0,
                    "lowestObserverState": 2,
                    "name": "RouterStore@1.keys",
                    "observers": Set {},
                  },
                  "name": "RouterStore@1",
                  "target": [Circular],
                  "values": Map {
                    "location" => Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                      Symbol(mobx administration): ObservableObjectAdministration$$1 {
                        "defaultEnhancer": [Function],
                        "keysAtom": Atom$$1 {
                          "diffValue": 0,
                          "isBeingObserved": false,
                          "isPendingUnobservation": false,
                          "lastAccessedBy": 0,
                          "lowestObserverState": 2,
                          "name": "RouterStore@1.location.keys",
                          "observers": Set {},
                        },
                        "name": "RouterStore@1.location",
                        "pendingKeys": Map {
                          "$$typeof" => false,
                          "nodeType" => false,
                          "@@__IMMUTABLE_ITERABLE__@@" => false,
                          "@@__IMMUTABLE_RECORD__@@" => false,
                          "_isMockFunction" => false,
                          "toJSON" => false,
                        },
                        "proxy": [Circular],
                        "target": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                          Symbol(mobx administration): [Circular],
                        },
                        "values": Map {
                          "pathname" => "/",
                          "search" => "",
                          "hash" => "",
                          "state" => undefined,
                        },
                      },
                    },
                  },
                },
              },
            }
          }
        />,
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
          "subscribe": [Function],
          "unsubscribe": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "store": Store {
            "application": ApplicationObject {},
            "credential": CredentialObject {},
            "error": ErrorObject {},
            "router": RouterStore {
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
                "subscribe": [Function],
                "unsubscribe": [Function],
              },
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
                Symbol(mobx administration): ObservableObjectAdministration$$1 {
                  "defaultEnhancer": [Function],
                  "keysAtom": Atom$$1 {
                    "diffValue": 0,
                    "isBeingObserved": false,
                    "isPendingUnobservation": false,
                    "lastAccessedBy": 0,
                    "lowestObserverState": 2,
                    "name": "RouterStore@1.location.keys",
                    "observers": Set {},
                  },
                  "name": "RouterStore@1.location",
                  "pendingKeys": Map {
                    "$$typeof" => false,
                    "nodeType" => false,
                    "@@__IMMUTABLE_ITERABLE__@@" => false,
                    "@@__IMMUTABLE_RECORD__@@" => false,
                    "_isMockFunction" => false,
                    "toJSON" => false,
                  },
                  "proxy": [Circular],
                  "target": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                    Symbol(mobx administration): [Circular],
                  },
                  "values": Map {
                    "pathname" => "/",
                    "search" => "",
                    "hash" => "",
                    "state" => undefined,
                  },
                },
              },
              "push": [Function],
              "replace": [Function],
              Symbol(mobx did run lazy initializers): true,
              Symbol(mobx administration): ObservableObjectAdministration$$1 {
                "defaultEnhancer": [Function],
                "keysAtom": Atom$$1 {
                  "diffValue": 0,
                  "isBeingObserved": false,
                  "isPendingUnobservation": false,
                  "lastAccessedBy": 0,
                  "lowestObserverState": 2,
                  "name": "RouterStore@1.keys",
                  "observers": Set {},
                },
                "name": "RouterStore@1",
                "target": [Circular],
                "values": Map {
                  "location" => Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                    Symbol(mobx administration): ObservableObjectAdministration$$1 {
                      "defaultEnhancer": [Function],
                      "keysAtom": Atom$$1 {
                        "diffValue": 0,
                        "isBeingObserved": false,
                        "isPendingUnobservation": false,
                        "lastAccessedBy": 0,
                        "lowestObserverState": 2,
                        "name": "RouterStore@1.location.keys",
                        "observers": Set {},
                      },
                      "name": "RouterStore@1.location",
                      "pendingKeys": Map {
                        "$$typeof" => false,
                        "nodeType" => false,
                        "@@__IMMUTABLE_ITERABLE__@@" => false,
                        "@@__IMMUTABLE_RECORD__@@" => false,
                        "_isMockFunction" => false,
                        "toJSON" => false,
                      },
                      "proxy": [Circular],
                      "target": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                        Symbol(mobx administration): [Circular],
                      },
                      "values": Map {
                        "pathname" => "/",
                        "search" => "",
                        "hash" => "",
                        "state" => undefined,
                      },
                    },
                  },
                },
              },
            },
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
