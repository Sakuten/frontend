// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components ApplicationList render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ApplicationList
    list={
      Array [
        Object {
          "id": 1,
          "lottery": Object {
            "classroom_id": 1,
            "done": false,
            "id": 1,
            "index": 0,
            "name": "5A.0",
            "winners": Array [],
          },
          "status": "pending",
        },
        Object {
          "id": 2,
          "lottery": Object {
            "classroom_id": 1,
            "done": false,
            "id": 2,
            "index": 0,
            "name": "5A.0",
            "winners": Array [],
          },
          "status": "pending",
        },
      ]
    }
    onCancel={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          data-test="applicationlist-application"
        >
          <div
            className="card"
          >
            <header
              className="card-header"
            >
              <p
                className="card-header-title"
              >
                5A.0
              </p>
              <styled.span
                className="is-dark"
              >
                発表をお待ちください
              </styled.span>
            </header>
            <footer
              className="card-footer"
            >
              <a
                className="card-footer-item has-text-danger"
                data-test="applicationlist-cancel"
                onClick={[Function]}
              >
                キャンセル
              </a>
            </footer>
          </div>
        </div>,
        <div
          data-test="applicationlist-application"
        >
          <div
            className="card"
          >
            <header
              className="card-header"
            >
              <p
                className="card-header-title"
              >
                5A.0
              </p>
              <styled.span
                className="is-dark"
              >
                発表をお待ちください
              </styled.span>
            </header>
            <footer
              className="card-footer"
            >
              <a
                className="card-footer-item has-text-danger"
                data-test="applicationlist-cancel"
                onClick={[Function]}
              >
                キャンセル
              </a>
            </footer>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="card"
          >
            <header
              className="card-header"
            >
              <p
                className="card-header-title"
              >
                5A.0
              </p>
              <styled.span
                className="is-dark"
              >
                発表をお待ちください
              </styled.span>
            </header>
            <footer
              className="card-footer"
            >
              <a
                className="card-footer-item has-text-danger"
                data-test="applicationlist-cancel"
                onClick={[Function]}
              >
                キャンセル
              </a>
            </footer>
          </div>,
          "data-test": "applicationlist-application",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <header
                className="card-header"
              >
                <p
                  className="card-header-title"
                >
                  5A.0
                </p>
                <styled.span
                  className="is-dark"
                >
                  発表をお待ちください
                </styled.span>
              </header>,
              <footer
                className="card-footer"
              >
                <a
                  className="card-footer-item has-text-danger"
                  data-test="applicationlist-cancel"
                  onClick={[Function]}
                >
                  キャンセル
                </a>
              </footer>,
            ],
            "className": "card",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="card-header-title"
                  >
                    5A.0
                  </p>,
                  <styled.span
                    className="is-dark"
                  >
                    発表をお待ちください
                  </styled.span>,
                ],
                "className": "card-header",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "5A.0",
                    "className": "card-header-title",
                  },
                  "ref": null,
                  "rendered": "5A.0",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "発表をお待ちください",
                    "className": "is-dark",
                  },
                  "ref": null,
                  "rendered": "発表をお待ちください",
                  "type": [Function],
                },
              ],
              "type": "header",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <a
                  className="card-footer-item has-text-danger"
                  data-test="applicationlist-cancel"
                  onClick={[Function]}
                >
                  キャンセル
                </a>,
                "className": "card-footer",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "キャンセル",
                  "className": "card-footer-item has-text-danger",
                  "data-test": "applicationlist-cancel",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "キャンセル",
                "type": "a",
              },
              "type": "footer",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="card"
          >
            <header
              className="card-header"
            >
              <p
                className="card-header-title"
              >
                5A.0
              </p>
              <styled.span
                className="is-dark"
              >
                発表をお待ちください
              </styled.span>
            </header>
            <footer
              className="card-footer"
            >
              <a
                className="card-footer-item has-text-danger"
                data-test="applicationlist-cancel"
                onClick={[Function]}
              >
                キャンセル
              </a>
            </footer>
          </div>,
          "data-test": "applicationlist-application",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <header
                className="card-header"
              >
                <p
                  className="card-header-title"
                >
                  5A.0
                </p>
                <styled.span
                  className="is-dark"
                >
                  発表をお待ちください
                </styled.span>
              </header>,
              <footer
                className="card-footer"
              >
                <a
                  className="card-footer-item has-text-danger"
                  data-test="applicationlist-cancel"
                  onClick={[Function]}
                >
                  キャンセル
                </a>
              </footer>,
            ],
            "className": "card",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="card-header-title"
                  >
                    5A.0
                  </p>,
                  <styled.span
                    className="is-dark"
                  >
                    発表をお待ちください
                  </styled.span>,
                ],
                "className": "card-header",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "5A.0",
                    "className": "card-header-title",
                  },
                  "ref": null,
                  "rendered": "5A.0",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "発表をお待ちください",
                    "className": "is-dark",
                  },
                  "ref": null,
                  "rendered": "発表をお待ちください",
                  "type": [Function],
                },
              ],
              "type": "header",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <a
                  className="card-footer-item has-text-danger"
                  data-test="applicationlist-cancel"
                  onClick={[Function]}
                >
                  キャンセル
                </a>,
                "className": "card-footer",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "キャンセル",
                  "className": "card-footer-item has-text-danger",
                  "data-test": "applicationlist-cancel",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "キャンセル",
                "type": "a",
              },
              "type": "footer",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            data-test="applicationlist-application"
          >
            <div
              className="card"
            >
              <header
                className="card-header"
              >
                <p
                  className="card-header-title"
                >
                  5A.0
                </p>
                <styled.span
                  className="is-dark"
                >
                  発表をお待ちください
                </styled.span>
              </header>
              <footer
                className="card-footer"
              >
                <a
                  className="card-footer-item has-text-danger"
                  data-test="applicationlist-cancel"
                  onClick={[Function]}
                >
                  キャンセル
                </a>
              </footer>
            </div>
          </div>,
          <div
            data-test="applicationlist-application"
          >
            <div
              className="card"
            >
              <header
                className="card-header"
              >
                <p
                  className="card-header-title"
                >
                  5A.0
                </p>
                <styled.span
                  className="is-dark"
                >
                  発表をお待ちください
                </styled.span>
              </header>
              <footer
                className="card-footer"
              >
                <a
                  className="card-footer-item has-text-danger"
                  data-test="applicationlist-cancel"
                  onClick={[Function]}
                >
                  キャンセル
                </a>
              </footer>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="card"
            >
              <header
                className="card-header"
              >
                <p
                  className="card-header-title"
                >
                  5A.0
                </p>
                <styled.span
                  className="is-dark"
                >
                  発表をお待ちください
                </styled.span>
              </header>
              <footer
                className="card-footer"
              >
                <a
                  className="card-footer-item has-text-danger"
                  data-test="applicationlist-cancel"
                  onClick={[Function]}
                >
                  キャンセル
                </a>
              </footer>
            </div>,
            "data-test": "applicationlist-application",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <header
                  className="card-header"
                >
                  <p
                    className="card-header-title"
                  >
                    5A.0
                  </p>
                  <styled.span
                    className="is-dark"
                  >
                    発表をお待ちください
                  </styled.span>
                </header>,
                <footer
                  className="card-footer"
                >
                  <a
                    className="card-footer-item has-text-danger"
                    data-test="applicationlist-cancel"
                    onClick={[Function]}
                  >
                    キャンセル
                  </a>
                </footer>,
              ],
              "className": "card",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <p
                      className="card-header-title"
                    >
                      5A.0
                    </p>,
                    <styled.span
                      className="is-dark"
                    >
                      発表をお待ちください
                    </styled.span>,
                  ],
                  "className": "card-header",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "5A.0",
                      "className": "card-header-title",
                    },
                    "ref": null,
                    "rendered": "5A.0",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "発表をお待ちください",
                      "className": "is-dark",
                    },
                    "ref": null,
                    "rendered": "発表をお待ちください",
                    "type": [Function],
                  },
                ],
                "type": "header",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <a
                    className="card-footer-item has-text-danger"
                    data-test="applicationlist-cancel"
                    onClick={[Function]}
                  >
                    キャンセル
                  </a>,
                  "className": "card-footer",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "キャンセル",
                    "className": "card-footer-item has-text-danger",
                    "data-test": "applicationlist-cancel",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "キャンセル",
                  "type": "a",
                },
                "type": "footer",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="card"
            >
              <header
                className="card-header"
              >
                <p
                  className="card-header-title"
                >
                  5A.0
                </p>
                <styled.span
                  className="is-dark"
                >
                  発表をお待ちください
                </styled.span>
              </header>
              <footer
                className="card-footer"
              >
                <a
                  className="card-footer-item has-text-danger"
                  data-test="applicationlist-cancel"
                  onClick={[Function]}
                >
                  キャンセル
                </a>
              </footer>
            </div>,
            "data-test": "applicationlist-application",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <header
                  className="card-header"
                >
                  <p
                    className="card-header-title"
                  >
                    5A.0
                  </p>
                  <styled.span
                    className="is-dark"
                  >
                    発表をお待ちください
                  </styled.span>
                </header>,
                <footer
                  className="card-footer"
                >
                  <a
                    className="card-footer-item has-text-danger"
                    data-test="applicationlist-cancel"
                    onClick={[Function]}
                  >
                    キャンセル
                  </a>
                </footer>,
              ],
              "className": "card",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <p
                      className="card-header-title"
                    >
                      5A.0
                    </p>,
                    <styled.span
                      className="is-dark"
                    >
                      発表をお待ちください
                    </styled.span>,
                  ],
                  "className": "card-header",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "5A.0",
                      "className": "card-header-title",
                    },
                    "ref": null,
                    "rendered": "5A.0",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "発表をお待ちください",
                      "className": "is-dark",
                    },
                    "ref": null,
                    "rendered": "発表をお待ちください",
                    "type": [Function],
                  },
                ],
                "type": "header",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <a
                    className="card-footer-item has-text-danger"
                    data-test="applicationlist-cancel"
                    onClick={[Function]}
                  >
                    キャンセル
                  </a>,
                  "className": "card-footer",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "キャンセル",
                    "className": "card-footer-item has-text-danger",
                    "data-test": "applicationlist-cancel",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "キャンセル",
                  "type": "a",
                },
                "type": "footer",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
