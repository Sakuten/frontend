// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components Home render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Home />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div>
          <styled.img
            src="week.svg"
          />
        </styled.div>,
        <styled.div>
          <styled.div>
            <img
              src="cloud.svg"
            />
          </styled.div>
          <styled.img
            src="sousaku.svg"
          />
        </styled.div>,
        <styled.div>
          <styled.div>
            <Link
              data-test="home-login"
              replace={false}
              to="/lottery/login"
            >
              <styled.div />
              <styled.div>
                <h3>
                  QRコード読み取り
                </h3>
                <p>
                  (カメラが起動します)
                </p>
              </styled.div>
            </Link>
          </styled.div>
        </styled.div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <styled.img
            src="week.svg"
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "src": "week.svg",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.div>
              <img
                src="cloud.svg"
              />
            </styled.div>,
            <styled.img
              src="sousaku.svg"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <img
                src="cloud.svg"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "src": "cloud.svg",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "src": "sousaku.svg",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <styled.div>
            <Link
              data-test="home-login"
              replace={false}
              to="/lottery/login"
            >
              <styled.div />
              <styled.div>
                <h3>
                  QRコード読み取り
                </h3>
                <p>
                  (カメラが起動します)
                </p>
              </styled.div>
            </Link>
          </styled.div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Link
              data-test="home-login"
              replace={false}
              to="/lottery/login"
            >
              <styled.div />
              <styled.div>
                <h3>
                  QRコード読み取り
                </h3>
                <p>
                  (カメラが起動します)
                </p>
              </styled.div>
            </Link>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.div />,
                <styled.div>
                  <h3>
                    QRコード読み取り
                  </h3>
                  <p>
                    (カメラが起動します)
                  </p>
                </styled.div>,
              ],
              "data-test": "home-login",
              "replace": false,
              "to": "/lottery/login",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <h3>
                      QRコード読み取り
                    </h3>,
                    <p>
                      (カメラが起動します)
                    </p>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "QRコード読み取り",
                    },
                    "ref": null,
                    "rendered": "QRコード読み取り",
                    "type": "h3",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "(カメラが起動します)",
                    },
                    "ref": null,
                    "rendered": "(カメラが起動します)",
                    "type": "p",
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div>
            <styled.img
              src="week.svg"
            />
          </styled.div>,
          <styled.div>
            <styled.div>
              <img
                src="cloud.svg"
              />
            </styled.div>
            <styled.img
              src="sousaku.svg"
            />
          </styled.div>,
          <styled.div>
            <styled.div>
              <Link
                data-test="home-login"
                replace={false}
                to="/lottery/login"
              >
                <styled.div />
                <styled.div>
                  <h3>
                    QRコード読み取り
                  </h3>
                  <p>
                    (カメラが起動します)
                  </p>
                </styled.div>
              </Link>
            </styled.div>
          </styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <styled.img
              src="week.svg"
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "src": "week.svg",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div>
                <img
                  src="cloud.svg"
                />
              </styled.div>,
              <styled.img
                src="sousaku.svg"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <img
                  src="cloud.svg"
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "src": "cloud.svg",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "src": "sousaku.svg",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <styled.div>
              <Link
                data-test="home-login"
                replace={false}
                to="/lottery/login"
              >
                <styled.div />
                <styled.div>
                  <h3>
                    QRコード読み取り
                  </h3>
                  <p>
                    (カメラが起動します)
                  </p>
                </styled.div>
              </Link>
            </styled.div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Link
                data-test="home-login"
                replace={false}
                to="/lottery/login"
              >
                <styled.div />
                <styled.div>
                  <h3>
                    QRコード読み取り
                  </h3>
                  <p>
                    (カメラが起動します)
                  </p>
                </styled.div>
              </Link>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.div />,
                  <styled.div>
                    <h3>
                      QRコード読み取り
                    </h3>
                    <p>
                      (カメラが起動します)
                    </p>
                  </styled.div>,
                ],
                "data-test": "home-login",
                "replace": false,
                "to": "/lottery/login",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <h3>
                        QRコード読み取り
                      </h3>,
                      <p>
                        (カメラが起動します)
                      </p>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "QRコード読み取り",
                      },
                      "ref": null,
                      "rendered": "QRコード読み取り",
                      "type": "h3",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "(カメラが起動します)",
                      },
                      "ref": null,
                      "rendered": "(カメラが起動します)",
                      "type": "p",
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
